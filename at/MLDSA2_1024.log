# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.benchmarkSigning

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: 1 of 5
# Warmup Iteration   1: 56114.694 ns/op
# Warmup Iteration   2: 55548.040 ns/op
# Warmup Iteration   3: 54862.195 ns/op
# Warmup Iteration   4: 54917.300 ns/op
# Warmup Iteration   5: 54535.780 ns/op
Iteration   1: 53985.277 ns/op
Iteration   2: 54886.685 ns/op
Iteration   3: 54811.456 ns/op
Iteration   4: 53785.652 ns/op
Iteration   5: 54671.571 ns/op

# Run progress: 6.67% complete, ETA 00:02:23
# Fork: 2 of 5
# Warmup Iteration   1: 54000.593 ns/op
# Warmup Iteration   2: 57624.673 ns/op
# Warmup Iteration   3: 55514.558 ns/op
# Warmup Iteration   4: 54341.056 ns/op
# Warmup Iteration   5: 53657.121 ns/op
Iteration   1: 54337.264 ns/op
Iteration   2: 54523.226 ns/op
Iteration   3: 53797.671 ns/op
Iteration   4: 54174.823 ns/op
Iteration   5: 54457.586 ns/op

# Run progress: 13.33% complete, ETA 00:02:12
# Fork: 3 of 5
# Warmup Iteration   1: 55096.468 ns/op
# Warmup Iteration   2: 54641.869 ns/op
# Warmup Iteration   3: 54361.407 ns/op
# Warmup Iteration   4: 54174.212 ns/op
# Warmup Iteration   5: 54135.167 ns/op
Iteration   1: 54688.891 ns/op
Iteration   2: 54793.483 ns/op
Iteration   3: 55081.791 ns/op
Iteration   4: 54375.204 ns/op
Iteration   5: 54741.968 ns/op

# Run progress: 20.00% complete, ETA 00:02:02
# Fork: 4 of 5
# Warmup Iteration   1: 55282.423 ns/op
# Warmup Iteration   2: 54789.003 ns/op
# Warmup Iteration   3: 53742.778 ns/op
# Warmup Iteration   4: 53931.152 ns/op
# Warmup Iteration   5: 55395.062 ns/op
Iteration   1: 59151.335 ns/op
Iteration   2: 54926.218 ns/op
Iteration   3: 54327.230 ns/op
Iteration   4: 53764.116 ns/op
Iteration   5: 54802.350 ns/op

# Run progress: 26.67% complete, ETA 00:01:52
# Fork: 5 of 5
# Warmup Iteration   1: 55017.926 ns/op
# Warmup Iteration   2: 54756.778 ns/op
# Warmup Iteration   3: 54198.399 ns/op
# Warmup Iteration   4: 54537.116 ns/op
# Warmup Iteration   5: 54243.902 ns/op
Iteration   1: 54452.591 ns/op
Iteration   2: 54741.431 ns/op
Iteration   3: 54411.530 ns/op
Iteration   4: 54043.743 ns/op
Iteration   5: 54813.915 ns/op


Result "org.sample.MLDSABenchmark.benchmarkSigning":
  54661.880 ±(99.9%) 755.494 ns/op [Average]
  (min, avg, max) = (53764.116, 54661.880, 59151.335), stdev = 1008.562
  CI (99.9%): [53906.387, 55417.374] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureCpuUsage

# Run progress: 33.33% complete, ETA 00:01:41
# Fork: 1 of 5
# Warmup Iteration   1: 2326.375 ns/op
# Warmup Iteration   2: 989.769 ns/op
# Warmup Iteration   3: 926.005 ns/op
# Warmup Iteration   4: 894.237 ns/op
# Warmup Iteration   5: 929.160 ns/op
Iteration   1: 902.333 ns/op
Iteration   2: 872.448 ns/op
Iteration   3: 922.236 ns/op
Iteration   4: 874.406 ns/op
Iteration   5: 818.925 ns/op

# Run progress: 40.00% complete, ETA 00:01:31
# Fork: 2 of 5
# Warmup Iteration   1: 2308.678 ns/op
# Warmup Iteration   2: 1001.001 ns/op
# Warmup Iteration   3: 896.148 ns/op
# Warmup Iteration   4: 955.211 ns/op
# Warmup Iteration   5: 982.648 ns/op
Iteration   1: 931.863 ns/op
Iteration   2: 1173.925 ns/op
Iteration   3: 999.887 ns/op
Iteration   4: 908.129 ns/op
Iteration   5: 810.527 ns/op

# Run progress: 46.67% complete, ETA 00:01:21
# Fork: 3 of 5
# Warmup Iteration   1: 2469.575 ns/op
# Warmup Iteration   2: 989.253 ns/op
# Warmup Iteration   3: 895.915 ns/op
# Warmup Iteration   4: 950.372 ns/op
# Warmup Iteration   5: 922.198 ns/op
Iteration   1: 909.073 ns/op
Iteration   2: 914.615 ns/op
Iteration   3: 927.567 ns/op
Iteration   4: 854.767 ns/op
Iteration   5: 830.289 ns/op

# Run progress: 53.33% complete, ETA 00:01:11
# Fork: 4 of 5
# Warmup Iteration   1: 2505.883 ns/op
# Warmup Iteration   2: 984.218 ns/op
# Warmup Iteration   3: 913.865 ns/op
# Warmup Iteration   4: 931.980 ns/op
# Warmup Iteration   5: 893.205 ns/op
Iteration   1: 915.422 ns/op
Iteration   2: 891.484 ns/op
Iteration   3: 985.161 ns/op
Iteration   4: 909.564 ns/op
Iteration   5: 807.776 ns/op

# Run progress: 60.00% complete, ETA 00:01:01
# Fork: 5 of 5
# Warmup Iteration   1: 2339.199 ns/op
# Warmup Iteration   2: 1082.903 ns/op
# Warmup Iteration   3: 918.288 ns/op
# Warmup Iteration   4: 968.701 ns/op
# Warmup Iteration   5: 951.464 ns/op
Iteration   1: 935.598 ns/op
Iteration   2: 901.058 ns/op
Iteration   3: 919.442 ns/op
Iteration   4: 916.591 ns/op
Iteration   5: 823.028 ns/op


Result "org.sample.MLDSABenchmark.measureCpuUsage":
  906.245 ±(99.9%) 55.884 ns/op [Average]
  (min, avg, max) = (807.776, 906.245, 1173.925), stdev = 74.604
  CI (99.9%): [850.360, 962.129] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureMemoryUsage

# Run progress: 66.67% complete, ETA 00:00:50
# Fork: 1 of 5
# Warmup Iteration   1: 2470.155 ns/op
# Warmup Iteration   2: 1120.297 ns/op
# Warmup Iteration   3: 979.310 ns/op
# Warmup Iteration   4: 983.559 ns/op
# Warmup Iteration   5: 1020.917 ns/op
Iteration   1: 1002.843 ns/op
Iteration   2: 955.640 ns/op
Iteration   3: 1015.972 ns/op
Iteration   4: 954.114 ns/op
Iteration   5: 895.700 ns/op

# Run progress: 73.33% complete, ETA 00:00:40
# Fork: 2 of 5
# Warmup Iteration   1: 2418.415 ns/op
# Warmup Iteration   2: 956.848 ns/op
# Warmup Iteration   3: 925.004 ns/op
# Warmup Iteration   4: 933.341 ns/op
# Warmup Iteration   5: 897.456 ns/op
Iteration   1: 921.078 ns/op
Iteration   2: 902.120 ns/op
Iteration   3: 1046.845 ns/op
Iteration   4: 867.482 ns/op
Iteration   5: 865.007 ns/op

# Run progress: 80.00% complete, ETA 00:00:30
# Fork: 3 of 5
# Warmup Iteration   1: 2264.205 ns/op
# Warmup Iteration   2: 1041.885 ns/op
# Warmup Iteration   3: 941.079 ns/op
# Warmup Iteration   4: 932.865 ns/op
# Warmup Iteration   5: 913.720 ns/op
Iteration   1: 937.715 ns/op
Iteration   2: 875.594 ns/op
Iteration   3: 899.679 ns/op
Iteration   4: 881.830 ns/op
Iteration   5: 803.144 ns/op

# Run progress: 86.67% complete, ETA 00:00:20
# Fork: 4 of 5
# Warmup Iteration   1: 2331.864 ns/op
# Warmup Iteration   2: 949.096 ns/op
# Warmup Iteration   3: 891.981 ns/op
# Warmup Iteration   4: 932.910 ns/op
# Warmup Iteration   5: 892.531 ns/op
Iteration   1: 864.740 ns/op
Iteration   2: 896.747 ns/op
Iteration   3: 889.320 ns/op
Iteration   4: 903.886 ns/op
Iteration   5: 815.937 ns/op

# Run progress: 93.33% complete, ETA 00:00:10
# Fork: 5 of 5
# Warmup Iteration   1: 2371.237 ns/op
# Warmup Iteration   2: 1069.149 ns/op
# Warmup Iteration   3: 969.315 ns/op
# Warmup Iteration   4: 934.087 ns/op
# Warmup Iteration   5: 1000.045 ns/op
Iteration   1: 934.585 ns/op
Iteration   2: 946.841 ns/op
Iteration   3: 944.792 ns/op
Iteration   4: 939.525 ns/op
Iteration   5: 876.501 ns/op


Result "org.sample.MLDSABenchmark.measureMemoryUsage":
  913.505 ±(99.9%) 42.565 ns/op [Average]
  (min, avg, max) = (803.144, 913.505, 1046.845), stdev = 56.823
  CI (99.9%): [870.940, 956.071] (assumes normal distribution)


# Run complete. Total time: 00:02:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode  Cnt      Score     Error  Units
MLDSABenchmark.benchmarkSigning    avgt   25  54661.880 ± 755.494  ns/op
MLDSABenchmark.measureCpuUsage     avgt   25    906.245 ±  55.884  ns/op
MLDSABenchmark.measureMemoryUsage  avgt   25    913.505 ±  42.565  ns/op
