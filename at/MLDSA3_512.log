# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.benchmarkSigning

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: 1 of 5
# Warmup Iteration   1: 88749.089 ns/op
# Warmup Iteration   2: 84730.810 ns/op
# Warmup Iteration   3: 85324.675 ns/op
# Warmup Iteration   4: 85360.434 ns/op
# Warmup Iteration   5: 85988.170 ns/op
Iteration   1: 85849.219 ns/op
Iteration   2: 84455.252 ns/op
Iteration   3: 84488.233 ns/op
Iteration   4: 86098.644 ns/op
Iteration   5: 86620.204 ns/op

# Run progress: 6.67% complete, ETA 00:02:23
# Fork: 2 of 5
# Warmup Iteration   1: 88955.624 ns/op
# Warmup Iteration   2: 85022.955 ns/op
# Warmup Iteration   3: 85255.725 ns/op
# Warmup Iteration   4: 84223.679 ns/op
# Warmup Iteration   5: 84535.920 ns/op
Iteration   1: 85432.250 ns/op
Iteration   2: 85188.945 ns/op
Iteration   3: 86674.836 ns/op
Iteration   4: 86138.224 ns/op
Iteration   5: 86431.970 ns/op

# Run progress: 13.33% complete, ETA 00:02:12
# Fork: 3 of 5
# Warmup Iteration   1: 87596.011 ns/op
# Warmup Iteration   2: 84611.034 ns/op
# Warmup Iteration   3: 83498.875 ns/op
# Warmup Iteration   4: 85002.034 ns/op
# Warmup Iteration   5: 84426.332 ns/op
Iteration   1: 85911.561 ns/op
Iteration   2: 86765.383 ns/op
Iteration   3: 85369.962 ns/op
Iteration   4: 85179.826 ns/op
Iteration   5: 84844.331 ns/op

# Run progress: 20.00% complete, ETA 00:02:02
# Fork: 4 of 5
# Warmup Iteration   1: 87517.624 ns/op
# Warmup Iteration   2: 85782.338 ns/op
# Warmup Iteration   3: 85191.790 ns/op
# Warmup Iteration   4: 83833.058 ns/op
# Warmup Iteration   5: 84383.030 ns/op
Iteration   1: 83988.031 ns/op
Iteration   2: 86276.260 ns/op
Iteration   3: 83995.864 ns/op
Iteration   4: 82878.412 ns/op
Iteration   5: 84382.349 ns/op

# Run progress: 26.67% complete, ETA 00:01:52
# Fork: 5 of 5
# Warmup Iteration   1: 85922.070 ns/op
# Warmup Iteration   2: 83141.921 ns/op
# Warmup Iteration   3: 84216.756 ns/op
# Warmup Iteration   4: 84821.259 ns/op
# Warmup Iteration   5: 85067.068 ns/op
Iteration   1: 84983.757 ns/op
Iteration   2: 84989.259 ns/op
Iteration   3: 85443.792 ns/op
Iteration   4: 83695.967 ns/op
Iteration   5: 85856.204 ns/op


Result "org.sample.MLDSABenchmark.benchmarkSigning":
  85277.549 ±(99.9%) 762.620 ns/op [Average]
  (min, avg, max) = (82878.412, 85277.549, 86765.383), stdev = 1018.076
  CI (99.9%): [84514.929, 86040.170] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureCpuUsage

# Run progress: 33.33% complete, ETA 00:01:42
# Fork: 1 of 5
# Warmup Iteration   1: 3779.089 ns/op
# Warmup Iteration   2: 1625.147 ns/op
# Warmup Iteration   3: 1137.964 ns/op
# Warmup Iteration   4: 1377.277 ns/op
# Warmup Iteration   5: 1327.822 ns/op
Iteration   1: 1129.083 ns/op
Iteration   2: 1152.141 ns/op
Iteration   3: 1308.488 ns/op
Iteration   4: 1360.008 ns/op
Iteration   5: 1321.435 ns/op

# Run progress: 40.00% complete, ETA 00:01:31
# Fork: 2 of 5
# Warmup Iteration   1: 3734.043 ns/op
# Warmup Iteration   2: 1573.188 ns/op
# Warmup Iteration   3: 1177.224 ns/op
# Warmup Iteration   4: 1183.045 ns/op
# Warmup Iteration   5: 1168.271 ns/op
Iteration   1: 1118.443 ns/op
Iteration   2: 1282.947 ns/op
Iteration   3: 1108.174 ns/op
Iteration   4: 1140.059 ns/op
Iteration   5: 1117.762 ns/op

# Run progress: 46.67% complete, ETA 00:01:21
# Fork: 3 of 5
# Warmup Iteration   1: 3327.807 ns/op
# Warmup Iteration   2: 1570.079 ns/op
# Warmup Iteration   3: 1179.359 ns/op
# Warmup Iteration   4: 1110.503 ns/op
# Warmup Iteration   5: 1134.008 ns/op
Iteration   1: 1136.602 ns/op
Iteration   2: 1119.798 ns/op
Iteration   3: 1109.524 ns/op
Iteration   4: 1192.904 ns/op
Iteration   5: 1140.173 ns/op

# Run progress: 53.33% complete, ETA 00:01:11
# Fork: 4 of 5
# Warmup Iteration   1: 3457.953 ns/op
# Warmup Iteration   2: 1483.747 ns/op
# Warmup Iteration   3: 1133.279 ns/op
# Warmup Iteration   4: 1134.129 ns/op
# Warmup Iteration   5: 1191.648 ns/op
Iteration   1: 1281.536 ns/op
Iteration   2: 1232.571 ns/op
Iteration   3: 1272.339 ns/op
Iteration   4: 1118.158 ns/op
Iteration   5: 1381.843 ns/op

# Run progress: 60.00% complete, ETA 00:01:01
# Fork: 5 of 5
# Warmup Iteration   1: 3284.198 ns/op
# Warmup Iteration   2: 1404.319 ns/op
# Warmup Iteration   3: 1145.860 ns/op
# Warmup Iteration   4: 1116.383 ns/op
# Warmup Iteration   5: 1110.711 ns/op
Iteration   1: 1214.399 ns/op
Iteration   2: 1131.437 ns/op
Iteration   3: 1058.999 ns/op
Iteration   4: 1112.900 ns/op
Iteration   5: 1140.206 ns/op


Result "org.sample.MLDSABenchmark.measureCpuUsage":
  1187.277 ±(99.9%) 68.148 ns/op [Average]
  (min, avg, max) = (1058.999, 1187.277, 1381.843), stdev = 90.975
  CI (99.9%): [1119.129, 1255.425] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureMemoryUsage

# Run progress: 66.67% complete, ETA 00:00:51
# Fork: 1 of 5
# Warmup Iteration   1: 3279.283 ns/op
# Warmup Iteration   2: 1233.202 ns/op
# Warmup Iteration   3: 1166.043 ns/op
# Warmup Iteration   4: 1098.555 ns/op
# Warmup Iteration   5: 1127.067 ns/op
Iteration   1: 1063.453 ns/op
Iteration   2: 1133.673 ns/op
Iteration   3: 1076.646 ns/op
Iteration   4: 1078.155 ns/op
Iteration   5: 1086.349 ns/op

# Run progress: 73.33% complete, ETA 00:00:40
# Fork: 2 of 5
# Warmup Iteration   1: 3352.829 ns/op
# Warmup Iteration   2: 1173.899 ns/op
# Warmup Iteration   3: 1110.145 ns/op
# Warmup Iteration   4: 1090.164 ns/op
# Warmup Iteration   5: 1453.112 ns/op
Iteration   1: 1258.531 ns/op
Iteration   2: 1179.399 ns/op
Iteration   3: 1071.724 ns/op
Iteration   4: 1154.320 ns/op
Iteration   5: 1073.983 ns/op

# Run progress: 80.00% complete, ETA 00:00:30
# Fork: 3 of 5
# Warmup Iteration   1: 3465.489 ns/op
# Warmup Iteration   2: 1168.438 ns/op
# Warmup Iteration   3: 1220.459 ns/op
# Warmup Iteration   4: 1092.930 ns/op
# Warmup Iteration   5: 1169.198 ns/op
Iteration   1: 1111.381 ns/op
Iteration   2: 1113.322 ns/op
Iteration   3: 1059.191 ns/op
Iteration   4: 1102.902 ns/op
Iteration   5: 1030.045 ns/op

# Run progress: 86.67% complete, ETA 00:00:20
# Fork: 4 of 5
# Warmup Iteration   1: 3374.896 ns/op
# Warmup Iteration   2: 1184.116 ns/op
# Warmup Iteration   3: 1125.145 ns/op
# Warmup Iteration   4: 1076.478 ns/op
# Warmup Iteration   5: 1142.868 ns/op
Iteration   1: 1068.966 ns/op
Iteration   2: 1156.807 ns/op
Iteration   3: 1062.080 ns/op
Iteration   4: 1046.852 ns/op
Iteration   5: 1131.837 ns/op

# Run progress: 93.33% complete, ETA 00:00:10
# Fork: 5 of 5
# Warmup Iteration   1: 3490.535 ns/op
# Warmup Iteration   2: 1154.661 ns/op
# Warmup Iteration   3: 1201.562 ns/op
# Warmup Iteration   4: 1056.129 ns/op
# Warmup Iteration   5: 1101.227 ns/op
Iteration   1: 1136.997 ns/op
Iteration   2: 1180.261 ns/op
Iteration   3: 1103.106 ns/op
Iteration   4: 1251.438 ns/op
Iteration   5: 1065.234 ns/op


Result "org.sample.MLDSABenchmark.measureMemoryUsage":
  1111.866 ±(99.9%) 44.402 ns/op [Average]
  (min, avg, max) = (1030.045, 1111.866, 1258.531), stdev = 59.275
  CI (99.9%): [1067.464, 1156.268] (assumes normal distribution)


# Run complete. Total time: 00:02:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode  Cnt      Score     Error  Units
MLDSABenchmark.benchmarkSigning    avgt   25  85277.549 ± 762.620  ns/op
MLDSABenchmark.measureCpuUsage     avgt   25   1187.277 ±  68.148  ns/op
MLDSABenchmark.measureMemoryUsage  avgt   25   1111.866 ±  44.402  ns/op
