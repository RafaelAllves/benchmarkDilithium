# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.benchmarkSigning

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: 1 of 5
# Warmup Iteration   1: 54339.201 ns/op
# Warmup Iteration   2: 53271.949 ns/op
# Warmup Iteration   3: 53440.467 ns/op
# Warmup Iteration   4: 53250.345 ns/op
# Warmup Iteration   5: 54006.074 ns/op
Iteration   1: 53300.605 ns/op
Iteration   2: 53514.996 ns/op
Iteration   3: 52929.903 ns/op
Iteration   4: 54300.301 ns/op
Iteration   5: 53956.046 ns/op

# Run progress: 6.67% complete, ETA 00:02:23
# Fork: 2 of 5
# Warmup Iteration   1: 54471.238 ns/op
# Warmup Iteration   2: 54147.147 ns/op
# Warmup Iteration   3: 53425.017 ns/op
# Warmup Iteration   4: 53961.029 ns/op
# Warmup Iteration   5: 53326.438 ns/op
Iteration   1: 53679.026 ns/op
Iteration   2: 53393.570 ns/op
Iteration   3: 52885.253 ns/op
Iteration   4: 53710.601 ns/op
Iteration   5: 54674.943 ns/op

# Run progress: 13.33% complete, ETA 00:02:12
# Fork: 3 of 5
# Warmup Iteration   1: 53877.479 ns/op
# Warmup Iteration   2: 52800.973 ns/op
# Warmup Iteration   3: 53149.273 ns/op
# Warmup Iteration   4: 53627.469 ns/op
# Warmup Iteration   5: 53829.587 ns/op
Iteration   1: 53577.966 ns/op
Iteration   2: 53654.100 ns/op
Iteration   3: 52862.295 ns/op
Iteration   4: 53162.723 ns/op
Iteration   5: 54221.872 ns/op

# Run progress: 20.00% complete, ETA 00:02:02
# Fork: 4 of 5
# Warmup Iteration   1: 54873.350 ns/op
# Warmup Iteration   2: 53143.059 ns/op
# Warmup Iteration   3: 53888.411 ns/op
# Warmup Iteration   4: 52246.785 ns/op
# Warmup Iteration   5: 52572.742 ns/op
Iteration   1: 52948.626 ns/op
Iteration   2: 54593.813 ns/op
Iteration   3: 53408.697 ns/op
Iteration   4: 53275.350 ns/op
Iteration   5: 54564.169 ns/op

# Run progress: 26.67% complete, ETA 00:01:52
# Fork: 5 of 5
# Warmup Iteration   1: 54848.655 ns/op
# Warmup Iteration   2: 53137.836 ns/op
# Warmup Iteration   3: 54066.136 ns/op
# Warmup Iteration   4: 53733.446 ns/op
# Warmup Iteration   5: 54133.252 ns/op
Iteration   1: 53385.287 ns/op
Iteration   2: 54027.116 ns/op
Iteration   3: 53253.822 ns/op
Iteration   4: 53703.442 ns/op
Iteration   5: 53510.381 ns/op


Result "org.sample.MLDSABenchmark.benchmarkSigning":
  53619.796 ±(99.9%) 400.395 ns/op [Average]
  (min, avg, max) = (52862.295, 53619.796, 54674.943), stdev = 534.516
  CI (99.9%): [53219.401, 54020.191] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureCpuUsage

# Run progress: 33.33% complete, ETA 00:01:42
# Fork: 1 of 5
# Warmup Iteration   1: 2289.411 ns/op
# Warmup Iteration   2: 985.247 ns/op
# Warmup Iteration   3: 921.358 ns/op
# Warmup Iteration   4: 958.594 ns/op
# Warmup Iteration   5: 921.293 ns/op
Iteration   1: 898.845 ns/op
Iteration   2: 901.476 ns/op
Iteration   3: 859.383 ns/op
Iteration   4: 839.609 ns/op
Iteration   5: 845.210 ns/op

# Run progress: 40.00% complete, ETA 00:01:31
# Fork: 2 of 5
# Warmup Iteration   1: 2325.073 ns/op
# Warmup Iteration   2: 977.322 ns/op
# Warmup Iteration   3: 945.365 ns/op
# Warmup Iteration   4: 919.222 ns/op
# Warmup Iteration   5: 889.618 ns/op
Iteration   1: 919.032 ns/op
Iteration   2: 900.960 ns/op
Iteration   3: 920.395 ns/op
Iteration   4: 848.603 ns/op
Iteration   5: 874.409 ns/op

# Run progress: 46.67% complete, ETA 00:01:21
# Fork: 3 of 5
# Warmup Iteration   1: 2636.904 ns/op
# Warmup Iteration   2: 958.350 ns/op
# Warmup Iteration   3: 954.833 ns/op
# Warmup Iteration   4: 979.410 ns/op
# Warmup Iteration   5: 1032.311 ns/op
Iteration   1: 922.972 ns/op
Iteration   2: 896.393 ns/op
Iteration   3: 949.132 ns/op
Iteration   4: 903.451 ns/op
Iteration   5: 912.446 ns/op

# Run progress: 53.33% complete, ETA 00:01:11
# Fork: 4 of 5
# Warmup Iteration   1: 2281.965 ns/op
# Warmup Iteration   2: 971.283 ns/op
# Warmup Iteration   3: 938.608 ns/op
# Warmup Iteration   4: 923.110 ns/op
# Warmup Iteration   5: 920.217 ns/op
Iteration   1: 914.607 ns/op
Iteration   2: 897.277 ns/op
Iteration   3: 908.619 ns/op
Iteration   4: 863.146 ns/op
Iteration   5: 882.608 ns/op

# Run progress: 60.00% complete, ETA 00:01:01
# Fork: 5 of 5
# Warmup Iteration   1: 2260.729 ns/op
# Warmup Iteration   2: 1063.563 ns/op
# Warmup Iteration   3: 939.088 ns/op
# Warmup Iteration   4: 1006.686 ns/op
# Warmup Iteration   5: 928.014 ns/op
Iteration   1: 933.198 ns/op
Iteration   2: 927.151 ns/op
Iteration   3: 1033.218 ns/op
Iteration   4: 871.439 ns/op
Iteration   5: 886.409 ns/op


Result "org.sample.MLDSABenchmark.measureCpuUsage":
  900.400 ±(99.9%) 29.822 ns/op [Average]
  (min, avg, max) = (839.609, 900.400, 1033.218), stdev = 39.811
  CI (99.9%): [870.578, 930.221] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureMemoryUsage

# Run progress: 66.67% complete, ETA 00:00:50
# Fork: 1 of 5
# Warmup Iteration   1: 2372.528 ns/op
# Warmup Iteration   2: 1064.685 ns/op
# Warmup Iteration   3: 935.065 ns/op
# Warmup Iteration   4: 936.036 ns/op
# Warmup Iteration   5: 947.059 ns/op
Iteration   1: 917.427 ns/op
Iteration   2: 910.340 ns/op
Iteration   3: 952.443 ns/op
Iteration   4: 896.844 ns/op
Iteration   5: 893.250 ns/op

# Run progress: 73.33% complete, ETA 00:00:40
# Fork: 2 of 5
# Warmup Iteration   1: 2244.382 ns/op
# Warmup Iteration   2: 1071.190 ns/op
# Warmup Iteration   3: 976.311 ns/op
# Warmup Iteration   4: 959.180 ns/op
# Warmup Iteration   5: 920.613 ns/op
Iteration   1: 902.571 ns/op
Iteration   2: 908.067 ns/op
Iteration   3: 918.615 ns/op
Iteration   4: 863.690 ns/op
Iteration   5: 847.043 ns/op

# Run progress: 80.00% complete, ETA 00:00:30
# Fork: 3 of 5
# Warmup Iteration   1: 2249.366 ns/op
# Warmup Iteration   2: 1284.407 ns/op
# Warmup Iteration   3: 944.514 ns/op
# Warmup Iteration   4: 977.401 ns/op
# Warmup Iteration   5: 970.216 ns/op
Iteration   1: 957.224 ns/op
Iteration   2: 968.090 ns/op
Iteration   3: 946.282 ns/op
Iteration   4: 971.963 ns/op
Iteration   5: 904.277 ns/op

# Run progress: 86.67% complete, ETA 00:00:20
# Fork: 4 of 5
# Warmup Iteration   1: 2301.814 ns/op
# Warmup Iteration   2: 1107.230 ns/op
# Warmup Iteration   3: 995.154 ns/op
# Warmup Iteration   4: 987.695 ns/op
# Warmup Iteration   5: 953.362 ns/op
Iteration   1: 971.563 ns/op
Iteration   2: 940.727 ns/op
Iteration   3: 950.733 ns/op
Iteration   4: 921.390 ns/op
Iteration   5: 907.687 ns/op

# Run progress: 93.33% complete, ETA 00:00:10
# Fork: 5 of 5
# Warmup Iteration   1: 2424.176 ns/op
# Warmup Iteration   2: 1008.883 ns/op
# Warmup Iteration   3: 906.354 ns/op
# Warmup Iteration   4: 966.372 ns/op
# Warmup Iteration   5: 908.928 ns/op
Iteration   1: 890.437 ns/op
Iteration   2: 899.658 ns/op
Iteration   3: 913.484 ns/op
Iteration   4: 961.056 ns/op
Iteration   5: 1030.941 ns/op


Result "org.sample.MLDSABenchmark.measureMemoryUsage":
  925.832 ±(99.9%) 29.548 ns/op [Average]
  (min, avg, max) = (847.043, 925.832, 1030.941), stdev = 39.445
  CI (99.9%): [896.285, 955.380] (assumes normal distribution)


# Run complete. Total time: 00:02:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode  Cnt      Score     Error  Units
MLDSABenchmark.benchmarkSigning    avgt   25  53619.796 ± 400.395  ns/op
MLDSABenchmark.measureCpuUsage     avgt   25    900.400 ±  29.822  ns/op
MLDSABenchmark.measureMemoryUsage  avgt   25    925.832 ±  29.548  ns/op
