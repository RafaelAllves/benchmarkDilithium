# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.benchmarkSigning

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: 1 of 5
# Warmup Iteration   1: 88775.287 ns/op
# Warmup Iteration   2: 87064.286 ns/op
# Warmup Iteration   3: 87160.405 ns/op
# Warmup Iteration   4: 86048.888 ns/op
# Warmup Iteration   5: 86118.456 ns/op
Iteration   1: 85503.900 ns/op
Iteration   2: 85422.484 ns/op
Iteration   3: 85448.635 ns/op
Iteration   4: 85789.525 ns/op
Iteration   5: 87300.028 ns/op

# Run progress: 6.67% complete, ETA 00:02:23
# Fork: 2 of 5
# Warmup Iteration   1: 85721.563 ns/op
# Warmup Iteration   2: 86159.889 ns/op
# Warmup Iteration   3: 87057.667 ns/op
# Warmup Iteration   4: 86468.614 ns/op
# Warmup Iteration   5: 86500.318 ns/op
Iteration   1: 85729.861 ns/op
Iteration   2: 85827.098 ns/op
Iteration   3: 87658.917 ns/op
Iteration   4: 87504.949 ns/op
Iteration   5: 86114.845 ns/op

# Run progress: 13.33% complete, ETA 00:02:12
# Fork: 3 of 5
# Warmup Iteration   1: 86133.549 ns/op
# Warmup Iteration   2: 87671.868 ns/op
# Warmup Iteration   3: 85292.705 ns/op
# Warmup Iteration   4: 86380.315 ns/op
# Warmup Iteration   5: 85471.675 ns/op
Iteration   1: 85669.406 ns/op
Iteration   2: 86869.635 ns/op
Iteration   3: 84575.692 ns/op
Iteration   4: 85934.381 ns/op
Iteration   5: 85593.235 ns/op

# Run progress: 20.00% complete, ETA 00:02:02
# Fork: 4 of 5
# Warmup Iteration   1: 86993.651 ns/op
# Warmup Iteration   2: 85698.108 ns/op
# Warmup Iteration   3: 86122.796 ns/op
# Warmup Iteration   4: 86514.926 ns/op
# Warmup Iteration   5: 85411.951 ns/op
Iteration   1: 86202.689 ns/op
Iteration   2: 85989.353 ns/op
Iteration   3: 86251.948 ns/op
Iteration   4: 85479.657 ns/op
Iteration   5: 87332.665 ns/op

# Run progress: 26.67% complete, ETA 00:01:52
# Fork: 5 of 5
# Warmup Iteration   1: 86710.051 ns/op
# Warmup Iteration   2: 89098.697 ns/op
# Warmup Iteration   3: 87172.891 ns/op
# Warmup Iteration   4: 86349.614 ns/op
# Warmup Iteration   5: 87472.790 ns/op
Iteration   1: 85703.878 ns/op
Iteration   2: 86714.969 ns/op
Iteration   3: 85319.984 ns/op
Iteration   4: 86359.941 ns/op
Iteration   5: 85381.784 ns/op


Result "org.sample.MLDSABenchmark.benchmarkSigning":
  86067.178 ±(99.9%) 580.770 ns/op [Average]
  (min, avg, max) = (84575.692, 86067.178, 87658.917), stdev = 775.311
  CI (99.9%): [85486.409, 86647.948] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureCpuUsage

# Run progress: 33.33% complete, ETA 00:01:41
# Fork: 1 of 5
# Warmup Iteration   1: 3148.354 ns/op
# Warmup Iteration   2: 1229.824 ns/op
# Warmup Iteration   3: 1015.969 ns/op
# Warmup Iteration   4: 1041.513 ns/op
# Warmup Iteration   5: 1070.526 ns/op
Iteration   1: 1084.098 ns/op
Iteration   2: 1077.584 ns/op
Iteration   3: 1039.315 ns/op
Iteration   4: 1160.597 ns/op
Iteration   5: 956.260 ns/op

# Run progress: 40.00% complete, ETA 00:01:31
# Fork: 2 of 5
# Warmup Iteration   1: 3511.228 ns/op
# Warmup Iteration   2: 1154.412 ns/op
# Warmup Iteration   3: 1091.032 ns/op
# Warmup Iteration   4: 1062.785 ns/op
# Warmup Iteration   5: 1143.618 ns/op
Iteration   1: 1128.034 ns/op
Iteration   2: 1088.147 ns/op
Iteration   3: 1086.565 ns/op
Iteration   4: 1133.315 ns/op
Iteration   5: 1040.418 ns/op

# Run progress: 46.67% complete, ETA 00:01:21
# Fork: 3 of 5
# Warmup Iteration   1: 3485.984 ns/op
# Warmup Iteration   2: 1170.042 ns/op
# Warmup Iteration   3: 1070.782 ns/op
# Warmup Iteration   4: 1045.284 ns/op
# Warmup Iteration   5: 1047.435 ns/op
Iteration   1: 1076.738 ns/op
Iteration   2: 1089.062 ns/op
Iteration   3: 1049.108 ns/op
Iteration   4: 1151.216 ns/op
Iteration   5: 1020.350 ns/op

# Run progress: 53.33% complete, ETA 00:01:11
# Fork: 4 of 5
# Warmup Iteration   1: 3387.425 ns/op
# Warmup Iteration   2: 1274.634 ns/op
# Warmup Iteration   3: 1090.868 ns/op
# Warmup Iteration   4: 1106.541 ns/op
# Warmup Iteration   5: 1161.033 ns/op
Iteration   1: 1042.249 ns/op
Iteration   2: 1112.789 ns/op
Iteration   3: 1081.930 ns/op
Iteration   4: 1168.572 ns/op
Iteration   5: 1051.695 ns/op

# Run progress: 60.00% complete, ETA 00:01:01
# Fork: 5 of 5
# Warmup Iteration   1: 3483.914 ns/op
# Warmup Iteration   2: 1232.427 ns/op
# Warmup Iteration   3: 1124.050 ns/op
# Warmup Iteration   4: 1084.580 ns/op
# Warmup Iteration   5: 1120.596 ns/op
Iteration   1: 1130.233 ns/op
Iteration   2: 1135.360 ns/op
Iteration   3: 1133.405 ns/op
Iteration   4: 1107.652 ns/op
Iteration   5: 1079.088 ns/op


Result "org.sample.MLDSABenchmark.measureCpuUsage":
  1088.951 ±(99.9%) 36.932 ns/op [Average]
  (min, avg, max) = (956.260, 1088.951, 1168.572), stdev = 49.304
  CI (99.9%): [1052.019, 1125.884] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: /home/rafael/.sdkman/candidates/java/21.0.5-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MLDSABenchmark.measureMemoryUsage

# Run progress: 66.67% complete, ETA 00:00:51
# Fork: 1 of 5
# Warmup Iteration   1: 3357.702 ns/op
# Warmup Iteration   2: 1225.926 ns/op
# Warmup Iteration   3: 1201.535 ns/op
# Warmup Iteration   4: 1141.085 ns/op
# Warmup Iteration   5: 1224.134 ns/op
Iteration   1: 1134.211 ns/op
Iteration   2: 1155.268 ns/op
Iteration   3: 1131.363 ns/op
Iteration   4: 1124.371 ns/op
Iteration   5: 1016.116 ns/op

# Run progress: 73.33% complete, ETA 00:00:40
# Fork: 2 of 5
# Warmup Iteration   1: 3167.379 ns/op
# Warmup Iteration   2: 1136.211 ns/op
# Warmup Iteration   3: 1094.425 ns/op
# Warmup Iteration   4: 1102.221 ns/op
# Warmup Iteration   5: 1496.742 ns/op
Iteration   1: 1390.885 ns/op
Iteration   2: 1326.086 ns/op
Iteration   3: 2176.825 ns/op
Iteration   4: 1260.934 ns/op
Iteration   5: 1083.322 ns/op

# Run progress: 80.00% complete, ETA 00:00:30
# Fork: 3 of 5
# Warmup Iteration   1: 3556.490 ns/op
# Warmup Iteration   2: 1256.202 ns/op
# Warmup Iteration   3: 1226.115 ns/op
# Warmup Iteration   4: 1161.801 ns/op
# Warmup Iteration   5: 1181.025 ns/op
Iteration   1: 1101.673 ns/op
Iteration   2: 1149.242 ns/op
Iteration   3: 1158.362 ns/op
Iteration   4: 1128.467 ns/op
Iteration   5: 1035.920 ns/op

# Run progress: 86.67% complete, ETA 00:00:20
# Fork: 4 of 5
# Warmup Iteration   1: 3447.219 ns/op
# Warmup Iteration   2: 1183.451 ns/op
# Warmup Iteration   3: 1124.447 ns/op
# Warmup Iteration   4: 1154.331 ns/op
# Warmup Iteration   5: 1139.624 ns/op
Iteration   1: 1120.421 ns/op
Iteration   2: 1194.887 ns/op
Iteration   3: 1174.732 ns/op
Iteration   4: 1074.132 ns/op
Iteration   5: 1054.317 ns/op

# Run progress: 93.33% complete, ETA 00:00:10
# Fork: 5 of 5
# Warmup Iteration   1: 3317.248 ns/op
# Warmup Iteration   2: 1209.003 ns/op
# Warmup Iteration   3: 1180.670 ns/op
# Warmup Iteration   4: 1086.802 ns/op
# Warmup Iteration   5: 1133.788 ns/op
Iteration   1: 1142.530 ns/op
Iteration   2: 1160.105 ns/op
Iteration   3: 1131.388 ns/op
Iteration   4: 1057.822 ns/op
Iteration   5: 975.250 ns/op


Result "org.sample.MLDSABenchmark.measureMemoryUsage":
  1178.345 ±(99.9%) 169.794 ns/op [Average]
  (min, avg, max) = (975.250, 1178.345, 2176.825), stdev = 226.671
  CI (99.9%): [1008.551, 1348.140] (assumes normal distribution)


# Run complete. Total time: 00:02:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode  Cnt      Score     Error  Units
MLDSABenchmark.benchmarkSigning    avgt   25  86067.178 ± 580.770  ns/op
MLDSABenchmark.measureCpuUsage     avgt   25   1088.951 ±  36.932  ns/op
MLDSABenchmark.measureMemoryUsage  avgt   25   1178.345 ± 169.794  ns/op
